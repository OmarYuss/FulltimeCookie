name: i18n Validation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run i18n validation
      run: |
        # Check for missing translations
        node -e "
          const { validateTranslations } = require('./src/lib/i18n-fallback');
          const locales = ['en', 'ar', 'he'];
          const result = validateTranslations(locales);
          
          let hasErrors = false;
          
          Object.entries(result.coverage).forEach(([locale, coverage]) => {
            console.log(`${locale}: ${coverage.toFixed(2)}% coverage`);
            if (coverage < 100) {
              console.error(`Missing keys in ${locale}:`, result.missingKeys[locale]);
              hasErrors = true;
            }
          });
          
          if (hasErrors) process.exit(1);
        "

    - name: Run RTL tests
      run: npm test src/tests/rtl.spec.tsx

    - name: Check bundle size
      run: |
        npm run build
        for locale in en ar he; do
          size=$(du -b .next/static/chunks/$locale.js | cut -f1)
          if [ $size -gt 15360 ]; then # 15KB = 15360 bytes
            echo "Bundle size for $locale exceeds 15KB limit"
            exit 1
          fi
        done

    - name: Check for hardcoded strings
      run: |
        ! grep -r --include="*.tsx" --include="*.ts" '[^"]"[^"]*[a-zA-Z]{3,}[^"]*"[^"]' src/
        if [ $? -eq 0 ]; then
          echo "Found potential hardcoded strings in components"
          exit 1
        fi 